name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on tags like v0.1.0, v1.2.3, etc.

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - aarch64-unknown-linux-gnu  # ARM64 Linux
          - aarch64-apple-darwin      # ARM64 macOS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cross (for cross-compilation)
        run: cargo install cross --locked

      - name: Build release binary
        run: cross build --release --target ${{ matrix.target }}
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.13
        timeout-minutes: 10

      - name: Create release archive
        run: |
          mkdir release
          cp target/${{ matrix.target }}/release/srch release/srch
          cd release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            zip srch-${{ matrix.target }}.zip srch
          else
            tar -czvf srch-${{ matrix.target }}.tar.gz srch
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release binaries for ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: srch-${{ matrix.target }}.${{ contains(matrix.target, 'windows') && 'zip' || 'tar.gz' }}
          asset_path: release/srch-${{ matrix.target }}.${{ contains(matrix.target, 'windows') && 'zip' || 'tar.gz' }}
